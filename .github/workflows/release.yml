on:
    push:
        branches:
            - "release/v*"

name: Make Release

env:
    BINARY_PATH: target/x86_64-unknown-linux-musl/release/multip

jobs:
    build_and_test:
        name: Rust project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master

            - name: Use Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 12

            - name: Use Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  target: x86_64-unknown-linux-musl
                  toolchain: stable
                  override: true

            - name: Build and test
              run: |
                  export MULTIP_VERSION="$(echo "$GITHUB_REF" | cut -d / -f 4)"
                  echo "::set-env name=NEW_VERSION::${MULTIP_VERSION}"
                  echo "::set-env name=PREV_VERSION::$(git tag --sort=committerdate --list 'v[0-9]*' | tail -n 1)"
                  cargo build --release --target x86_64-unknown-linux-musl

                  strip ${{ env.BINARY_PATH }}

                  npm ci
                  npm test

            - name: Create Gitub Release
              id: create_release
              uses: actions/create-release@v1.0.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.NEW_VERSION }}
                  release_name: ${{ env.NEW_VERSION }}
                  body: |
                      All changes
                      https://github.com/esamattis/multip/compare/${{ env.PREV_VERSION }}...${{ env.NEW_VERSION }}

                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  # This pulls from the CREATE RELEASE step above,
                  # referencing it's ID to get its outputs object, which
                  # include a `upload_url`. See this blog post for more info:
                  # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ${{ env.BINARY_PATH }}
                  asset_name: multip-amd64
                  asset_content_type: application/octet-stream
