on:
    push:
        # Sequence of patterns matched against refs/tags
        tags:
            - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build and upload release assets

jobs:
    build_and_test:
        name: Rust project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --release
            - name: Optimize binary size
              run: strip target/release/multip

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1.0.0
              env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1.0.1
              env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  # This pulls from the CREATE RELEASE step above,
                  # referencing it's ID to get its outputs object, which
                  # include a `upload_url`. See this blog post for more info:
                  # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./target/release/multip
                  asset_name: multip-amd64
                  asset_content_type: application/octet-stream
